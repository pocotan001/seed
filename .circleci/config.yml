version: 2

references:
  defaults: &defaults
    working_directory: ~/project/seed
    docker:
      - image: circleci/node:8-browsers

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: ~/project
      paths:
        - seed

  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/project

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v1-npm-deps-{{ .Branch }}-
            - v1-npm-deps-
      - run:
          name: Install Depependencies
          command: npm install
      - save_cache:
          key: v1-npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - *persist_to_workspace

  test:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Type Check
          command: npm run typecheck
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm test -- --maxWorkers=2

  build:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Build
          command: ENV=${ENV} npm run build
      - *persist_to_workspace

  deploy:
    <<: *defaults
    docker:
      - image: google/cloud-sdk
    steps:
      - *attach_workspace
      - run:
          name: Activate Service Account
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run:
          name: Configure the Google Cloud SDK
          command: |
            gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCLOUD_COMPUTE_ZONE}
      - run:
          name: Deploy to App Engine
          command: gcloud app deploy --quiet

workflows:
  version: 2

  install_and_test:
    jobs:
      - install
      - test:
          requires:
            - install

  deploy_production:
    jobs:
      - build:
          context: seed-production
          requires:
            - install
          filters:
            branches:
              only: master
      - deploy:
          context: seed-production
          requires:
            - test
            - build
